/*********************************************************************************************************************
 * TC264 Opensourec Library 即（TC264 开源库）是一个基于官方 SDK 接口的第三方开源库
 * Copyright (c) 2022 SEEKFREE 逐飞科技
 *
 * 文件名称          turn_compensation.h - 转弯补偿控制器
 * 功能说明          补偿转弯时由于离心力和舵机角度导致的机械零点漂移
 * 开发环境          ADS v1.9.4
 * 适用平台          TC264D
 ********************************************************************************************************************/

#ifndef TURN_COMPENSATION_H
#define TURN_COMPENSATION_H

#include "zf_common_headfile.h"

// *************************** 转弯补偿功能说明 ***************************
// 问题：
// 1. 转弯时离心力使车体向外侧倾斜
// 2. 舵机角度改变车体重心分布
// 3. 实际平衡角度不再是静止时的机械零点
//
// 解决方案：动态零点补偿算法
// 补偿值与舵机偏差和速度的乘积成正比，简单直观
//
// 补偿公式：
// dynamic_zero = (servo_angle - servo_center) × |speed| × gain × (k_error × |image_error| / 100) / 10
//
// 计算步骤：
// 1. 计算舵机偏差：servo_deviation = servo_angle - servo_center
// 2. 图像误差判断：如果 |image_error| < image_error_threshold，则补偿为0（直行时不补偿）
// 3. 计算误差系数：error_coeff = k_error × |image_error| / 100
// 4. 计算动态补偿：dynamic_zero = servo_deviation × |speed| × gain × error_coeff / 10
// 5. 限幅处理：限制在 [-turn_comp_max, +turn_comp_max] 范围
// 6. 死区处理：如果 |dynamic_zero| < deadzone，则补偿为0
//
// 物理意义：
// - 补偿与舵机偏差、速度、图像误差的乘积成正比
// - 图像误差越大，补偿增益越大（通过 k_error 系数调节）
// - 图像误差小（接近直行）时：补偿为0，避免不必要抖动
// - 静止时（speed=0）：补偿为0
// - 高速转弯时：补偿显著增大
// - 死区避免微小抖动
//
// 参数说明：
// - gain: 动态补偿增益（建议范围: 0.1 ~ 10.0）
// - k_error: 图像误差系数（与err值成线性关系，建议范围: 0.1 ~ 5.0）
// - deadzone: 死区阈值（补偿绝对值小于此值时视为0，默认0.7度）
// - image_error_threshold: 图像误差阈值（误差小于此值时不补偿，避免直行抖动）
// - servo_angle: 当前舵机角度（度）
// - servo_center: 舵机中点角度（默认90度）
// - speed: 当前速度（编码器值）
// - turn_comp_max: 最大补偿限制（默认±8度）

// *************************** 全局变量声明 ***************************
extern float turn_comp_k_servo;      // 死区阈值（补偿绝对值小于此值时视为0，默认0.7度）
extern float turn_comp_k_speed;      // 动态补偿增益（建议范围: 0.1 ~ 10.0）
extern float turn_comp_k_error;      // 图像误差系数（与err值成线性关系，默认1.0）
extern float turn_comp_max;          // 最大补偿角度限制（防止补偿过大，默认±8度）
extern float servo_center_angle;     // 舵机中点角度（默认90度，可调整）
extern float turn_comp_image_threshold; // 图像误差阈值（误差小于此值时不补偿，默认5.0）

// *************************** 函数声明 ***************************

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     初始化转弯补偿控制器
// 参数说明     void
// 返回参数     void
// 使用示例     turn_compensation_init();
// 备注信息     在系统初始化时调用，设置默认参数
//-------------------------------------------------------------------------------------------------------------------
void turn_compensation_init(void);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     计算转弯补偿角度（动态零点补偿算法）
// 参数说明     servo_angle: 当前舵机角度
//              speed: 当前速度（编码器反馈值）
//              image_error: 图像中线偏差（用于判断是否需要补偿）
// 返回参数     float: 补偿角度（度）
// 使用示例     float compensation = turn_compensation_calculate(servo_angle, encoder[0], image_error);
// 备注信息     返回值为补偿角度，需要叠加到目标角度或机械零点上
//              补偿 = (舵机偏差) × |速度| × 增益 × (误差系数 × |图像误差| / 100) / 10
//              - 误差系数通过 turn_comp_k_error 调节，使补偿与图像误差成线性关系
//              - 然后限幅到 [-turn_comp_max, +turn_comp_max]
//              - 如果 |image_error| < image_error_threshold，则补偿为0（直行不补偿）
//              - 如果 |补偿| < deadzone，则补偿为0（死区处理）
//              正值表示车需要向左倾斜补偿，负值表示向右倾斜补偿
//-------------------------------------------------------------------------------------------------------------------
float turn_compensation_calculate(float servo_angle, float speed, float image_error);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     获取当前补偿值（用于调试显示）
// 参数说明     void
// 返回参数     float: 当前补偿角度（度）
// 使用示例     float comp = turn_compensation_get_current();
// 备注信息     返回上次计算的补偿值
//-------------------------------------------------------------------------------------------------------------------
float turn_compensation_get_current(void);

#endif
